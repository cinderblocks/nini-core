init:
  - ps: if ($env:APPVEYOR_REPO_TAG -eq "true") { $env:TAG_VERSION = "$env:APPVEYOR_REPO_TAG_NAME.$env:APPVEYOR_BUILD_NUMBER" } else { $env:TAG_VERSION = "v0.1.0.$env:APPVEYOR_BUILD_NUMBER" }
  - ps: $env:TAG_VERSION = $env:TAG_VERSION -replace 'v',''
  - ps: Write-Host "Setting version to '$env:TAG_VERSION'"
  - ps: Update-AppveyorBuild -Version "$env:TAG_VERSION"

environment:
  PfxDownloadUrl:
    secure: T8uKu+tTR2G7LDE1zPGNOi+prl4YaKXP6DOC5eU6A17J3QEv/M/DPXj5K5mv+gHy
  PfxDownloadPasswd:
    secure: nAIqrjhaoamhiuAcae/xNw==
  PfxPassword:
    secure: +vWSGzLkiBGVIxfPb+iRtD+/maQjI2d92hN4PoNAxMc=

image: Visual Studio 2022

configuration: Release

pull_requests:
  do_not_increment_build_number: true

nuget:
  disable_publish_on_pr: true

dotnet_csproj:
  patch: true
  file: '**\*.csproj;**\*.props'
  version: '{version}'
  package_version: '{version}'

build:
  project: nini-core.sln
  parallel: true
  verbosity: minimal
  publish_nuget: true
  publish_nuget_symbols: false

cache:
  - packages -> **\packages.config
  - '%LocalAppData%\NuGet\Cache'

before_build:
  - nuget restore nini-core.sln

after_build:
 - ps: util/InstallRemotePfx.ps1 -PfxDownloadUrl $env:PfxDownloadUrl -PfxDownloadUser AppVeyor -PfxDownloadPasswd $env:PfxDownloadPasswd -PfxPasswd $env:PfxPassword
 - ps: util/SignPackages.ps1 -PfxPasswd $env:PfxPassword
 - ps: Get-ChildItem -Filter "*.nupkg" -Path "C:\Users\appveyor\AppData\Local\Temp\" -recurse | Compress-Archive -DestinationPath "nuget_libraries.zip" -Verbose

